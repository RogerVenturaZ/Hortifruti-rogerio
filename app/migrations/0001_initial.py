# Generated by Django 5.1.3 on 2024-12-16 23:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Fornecedor')),
                ('CPF', models.CharField(max_length=50, unique=True, verbose_name='CPF do Fornecedor')),
                ('email', models.EmailField(max_length=100, verbose_name='Email do Fornecedor')),
                ('endereco', models.CharField(max_length=100, verbose_name='Endereço do Fornecedor')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone do Fornecedor')),
                ('cidade', models.CharField(max_length=65, verbose_name='Cidade do Fornecedor')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('endereco', models.CharField(max_length=100, verbose_name='Endereço do usuário')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone do usuário')),
                ('cidade', models.CharField(max_length=65, verbose_name='Cidade do usuário')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentarios', models.CharField(max_length=100, verbose_name='Texto do comentário')),
                ('avaliacoes', models.IntegerField(choices=[(1, 'Muito Ruim'), (2, 'Ruim'), (3, 'Regular'), (4, 'Bom'), (5, 'Muito Bom')], verbose_name='Avaliação do feedback')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Produto')),
                ('tipo', models.CharField(choices=[('Frutas', 'Frutas'), ('Verduras', 'Verduras'), ('Legumes', 'Legumes')], max_length=20, verbose_name='Tipo de Produto')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor do Produto')),
                ('quantidade', models.CharField(max_length=100, verbose_name='Quantidade de Produto')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='static/imgs', verbose_name='Imagem')),
                ('idfornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.fornecedor', verbose_name='Fornecedor')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('carrinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.carrinho')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.produto')),
            ],
        ),
        migrations.CreateModel(
            name='Estoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade de Produto')),
                ('produto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estoque', to='app.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Estoque',
                'verbose_name_plural': 'Estoques',
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Usuário')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('pagamento', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor do Pagamento')),
                ('datavenda', models.DateField(verbose_name='Data da Venda')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.produto', verbose_name='Produto')),
                ('tipovenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.itemcarrinho', verbose_name='Tipo de Venda')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
            },
        ),
        migrations.CreateModel(
            name='ItensdeVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor do Produto')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade do Produto')),
                ('categoria', models.IntegerField(choices=[(1, 'Frutas'), (2, 'Legumes'), (3, 'Verduras'), (4, 'Frutas e Legumes'), (5, 'Frutas e Verduras'), (6, 'Verduras e Legumes')], verbose_name='Categoria do Produto')),
                ('disponibilidade_estoque', models.CharField(max_length=100, null=True, verbose_name='Produto Disponíveis no Estoque')),
                ('produto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.produto', verbose_name='Nome do Produto')),
                ('idvendas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.venda', verbose_name='Vendas')),
            ],
            options={
                'verbose_name': 'Item de Venda',
                'verbose_name_plural': 'Itens de Venda',
            },
        ),
    ]
